{
  "name": "openbbs",
  "version": "0.18.1",
  "licence": "The MIT License (MIT)",
  "description": "openBBS client in node.js",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/OpenBBS/openbbs.git"
  },
  "author": {
    "name": "Jean-Charles Nade"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/OpenBBS/openbbs/issues"
  },
  "homepage": "https://github.com/OpenBBS/openbbs#readme",
  "dependencies": {
    "request": "2.67.0"
  },
  "engines": {
    "node": "4.2.4"
  },
  "gitHead": "776c4eb8e9514f6c91bc864f0470c2bdef4c07b7",
  "readme": "#### OpenBBS node.js API Client\r\n\r\nThis  client allow openBBS developers to build their own BBS/Blog/Forum logic in front\r\nof an openBBS REST API Server.\r\n\r\nModule Installation:\r\n\r\n    npm install OpenBBS/openbbs --save\r\n\r\n\r\nCreate an openBBS client:\r\n\r\n     var Openbbs  = require('openbbs');\r\n     var openbbs  = new Openbbs;\r\n\r\n     openbbs.init({ host : 'http://localhost:5001',\r\n                    token : 'none',\r\n                    key: 'api-key' });\r\n     console.log( client.getConfig() )\r\n\r\n\r\n#### User Creation \r\n\r\n\r\nRequesting a credentials for authentification:\r\n\r\n     var options = {  \r\n                       login:     'bob',\r\n                       password:  'a very long password'\r\n                    }\r\n\r\n     openbbs.authAdd(options,function(err,response){\r\n\tconsole(response)\r\n        // 201: accepted\r\n        // 403: refused (login already used)\r\n        // 500: API not available\r\n     })\r\n\r\n\r\n\r\nChecking if a credentials (login) exist:\r\n\r\n     openbbs.authCheck('bob',function(err,response){\r\n      \tconsole.log(response)\r\n        // 200: exist\r\n        // 404: not found\r\n        // 500: API not available\r\n     })\r\n\r\n\r\nGenerate a 'openbbs_user_token' from a working login and password:\r\n\r\n      var options = {\r\n\t  login:    'TheUserLogin', \r\n          password: 'theUserPassword',\r\n          ip:       '1.2.3.4'\r\n      }\r\n\r\n      openbbs.auth(options, function(err, token){\r\n\t      if (err) {\r\n        \t    console.log('error',err)\r\n              } else {\r\n\t \t   if (token) {\r\n\t \t   \tconsole.log(token.openbbs_user_token)\r\n\t \t   } else {\r\n\t \t   \tconsole.log('Wrong Login or Password')\r\n\t \t   }\r\n       }})\r\n\r\n        { userId: 'VJr3LuAHl',\r\n          openbbs_user_token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1\r\n                               NiJ9.eyJ1c2VySWQiOiJWSnIzTHVBSGw\r\n                               iLCJzZWN0b3IiOiJhbHBoYSJ9.DZKCIC\r\n                               Iq_1QWKuhtIwxNE4WsmmTVtjoa9eqUQr\r\n                               U9eYE' \r\n        }\r\n\r\n\r\n\r\n\r\n## Propaganda\r\n\r\n\r\n\r\nPosting a new element for the propaganda\r\n\r\n\tvar options = {\r\n\t\tbbs    : 'dev',\r\n\t\tsub    : 'null',\r\n\t\ttitle  : 'Hello World',\r\n                url    : 'http://www.HelloWorld.com',\r\n\t}\r\n        \r\n        var userToken = 'the-user-token'\r\n\r\n        bbs.propaAdd(options, userToken, function(err, msg) {\r\n\t\tif (err) { \r\n\t\t\tconsole.log(err);\r\n\t\telse {\r\n\t\t\tconsole.log(msg); // { msg : 'sent' }\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\nReading a element posted in the propaganda\r\n\r\n      var options = {\r\n        bbs    : 'dev',\r\n        sub    : 'null',\r\n        id     : 'pJUbY78hBH8g'\r\n      }\r\n      var userToken = 'the-user-token'\r\n\r\n      bbs.getThing(options, userToken, function(err, thingInfo) {\r\n        if (err) { \r\n          console.log(err);\r\n        else {\r\n          console.log(msg); // { msg : 'sent' }\r\n        }\r\n      }\r\n\r\n\r\nAdding a reply(comment) in a talks(thread) for a specific elements(things)\r\n\r\n\tvar options = {\r\n\t\tbbs    : 'dev',\r\n\t\tsub    : 'null',\r\n\t\tid     : 'KhaJ_jU_a'  // talk ID you reply from \r\n                slug   : 'Jjgh'       // comment ID you reply from, empty for new comment\r\n                raw    : 'me too'\r\n\t}\r\n        \r\n        var userToken = 'the-user-token'\r\n\r\n        bbs.replyAdd(options, userToken, function(err, msg) {\r\n\t\tif (err) { \r\n\t\t\tconsole.log(err);\r\n\t\telse {\r\n\t\t\tconsole.log(msg); // { msg : 'sent' }\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\nReading the propaganda from a sub-sector :\r\n\r\n\tvar options = {\r\n  \t\tbbs     : 'dev',\r\n  \t\tsub     : 'null',\r\n  \t\tcanal   : 'hot',    // hot, new, seditious, top,\r\n  \t\tuserId  : 'fantomas',\r\n  \t\tlimit   : false,\r\n  \t\tafter   : false,\r\n  \t\tdisplay : 'full',\r\n  \t\t_debug  : true,  \r\n  \t\t_trace  : true,  \r\n\t}\r\n\r\n\tvar jwt = 'TheUserWebToken'\r\n\r\n\tbbs.propaganda(options, jwt, function(err, array){\r\n  \t\tif (err) {\r\n    \t\t\tconsole.log('error',err)\r\n  \t\t} else {\r\n    \t\t\tconsole.log('code', array): \r\n  \t\t}\r\n\t}) \r\n\r\n\r\nReading the talks/Thread  from a sub-sector :\r\n\r\n\tvar options = {\r\n  \t\tbbs     : 'dev',\r\n  \t\tsub     : 'null',\r\n  \t\ttid     : 'hot',    // Talks id\r\n  \t\tlimit   : false,\r\n  \t\tafter   : false,\r\n  \t\tdisplay : 'full',\r\n  \t\t_debug  : false,   // for dev  \r\n  \t\t_trace  : false,   // for dev\r\n\t}\r\n\r\n\tvar jwt = 'TheUserWebToken'\r\n\r\n\tbbs.getTalks(options, jwt, function(err, array){\r\n  \t\tif (err) {\r\n    \t\t\tconsole.log('error',err)\r\n  \t\t} else {\r\n    \t\t\tconsole.log('code', array): \r\n  \t\t}\r\n\t}) \r\n\r\n\r\n\r\n",
  "readmeFilename": "README.md",
  "_id": "openbbs@0.18.1",
  "_shasum": "947f772f69cf62b1162e09a3a6d926a77a10d7be",
  "_from": "openbbs/openbbs",
  "_resolved": "git://github.com/openbbs/openbbs.git#776c4eb8e9514f6c91bc864f0470c2bdef4c07b7"
}
