var request   = require('request');

var client = function () {};

client.prototype.init = function (options) {
        this.client  = options;
        //this.client.jwt   = options.token;
}

client.prototype.getConfig = function () {
    return this.client;
}

client.prototype.getThing = function (options, userToken, callback) {
  var query  = '';

  var Roptions = {
             method   : 'GET',
             uri      : this.client.host+'/v1/propa/'
                        +options.bbs
                        +'/'
                        +options.sub
                        +'/things/'
                        +options.id,
             headers  : { 
                          userToken:  userToken,
                          userAgent: 'openBBS'
                        }
  };

  request(Roptions,function(err,response,body){
    if (err) {
          callback(err) 
    } else {
          if (response.statusCode === 200) {
            callback(err,body)
          } else {
            callback(err,null)
          }
    }
  });

};

client.prototype.getTalks = function (options, userToken, callback) {
           
           var query  = '';
           
           if (options.display) {
                query += "display="+ options.display || 'full' +'&';
           }
           
           if (options.limit) { 
                query += "limit="+options.limit || 100 +'&';
           }

           if (options.after) { 
                query += "after="+options.after || '' +'&';
           }
           
           var Roptions = {
                  	   method   : 'GET',
           		   uri      : this.client.host+'/v1/propa/'
           		              +options.bbs
           		              +'/'
           		              +options.sub
           		              +'/talks/'
           		              +options.tid
           		              +'?'+query,
           	           headers  : { 
           	                        userToken:  userToken,
           	                        userAgent: 'openBBS'
                                      }
           }
          
           request(Roptions,function(err,response,body){
           	if (err) {
			callback(err)	
		} else {
                	if (response.statusCode === 200) {
				callback(err,body)
			} else {
				callback(err,null)
			}
		}
           });
 };

client.prototype.propaganda = function (options, userToken, callback) {
           
           var query  = '';
           
           if (options.display) {
                query += "display="+options.display+'&';
           }
           
           if (options.limit) { 
                query += "limit="+options.limit+'&';
           }

           if (options.after) { 
                query += "after="+options.after+'&';
           }
           
           var Roptions = {
                  	   method   : 'GET',
           		   uri      : this.client.host+'/v1/propa/'+options.bbs+'/'+options.sub+'/'+options.canal+'?'+query,
           	           headers  : { 
           	                        userToken:  userToken,
           	                        userAgent: 'openBBS'
                                      }
           }
          
           request(Roptions,function(err,response,body){
           	if (err) {
			callback(err)	
		} else {
                	if (response.statusCode === 200) {
				callback(err,body)
			} else {
				callback(err,null)
			}
		}
           });
 };

client.prototype.authAdd = function (userInfo, callback) {
           
    var options = {
        method   : 'POST',
        uri      : this.client.host+'/v1/auth',
        json     : userInfo,
        headers  : { jwt : this.client.jwt,
                      key: this.client.key
                    }
        };

    request(options,function(err,response,body){
        if (err) {
            callback(err)
        }  else {
          callback(err,response.statusCode)
        }
        });
 };

client.prototype.authCheck = function (loginId, callback) {
           
           var options = {
                  	   method   : 'GET',
           		   uri      : this.client.host+'/v1/auth/'+loginId,
           	           headers  : { jwt : this.client.jwt }
           }
          
           request(options,function(err,response,body){
           	if (err) {
			callback(err)	
		} else {
		      callback(err,response.statusCode)
		    	
		}
           });
 };

client.prototype.auth = function (authInfo, callback) {
           
           var options = {
                  	   method   : 'POST',
           		   uri      : this.client.host+'/v1/auth/'+authInfo.login,
           		   json     : {
           		                 login    : authInfo.login,
           		                 password : authInfo.password,
           		                 ip       : authInfo.ip,    
           		                 agent    : 'openBBS-client'
           		   
           		              },
           	           headers  : { jwt : this.client.jwt }
           }
          
           request(options,function(err,response,body){
           	if (err) {
			callback(err)	
		} else {
                	if (response.statusCode === 201) {
				callback(err,body)

			} else {
				callback(err,null)
			}
		}
           });
 };

client.prototype.propaAdd = function (payload, userToken, callback) {
           
           var options = {
                  	   method   : 'POST',
           		   uri      : this.client.host+'/v1/propa/'+payload.bbs+'/'+payload.sub ,
           		   json     : payload,
           	           headers  : { 
           	                        userToken:  userToken
                                      }
           }
          
           request(options,function(err,response,body){
           	if (err) {
			callback(err)	
		} else {
                	if (response.statusCode === 201) {
				callback(err,body)
			} else {
				callback(err,null)
			}
		}
           });
 }

client.prototype.replyAdd = function (payload, userToken, callback) {
          
           var options = {
                  	   method   : 'POST',
           		   uri      : this.client.host+'/v1/propa/'+payload.bbs+'/'+payload.sub+'/talks/'+payload.id,
           		   json     : payload,
           	           headers  : { 
           	                        userToken:  userToken
                                      }
           }
          
           request(options,function(err,response,body){
           	if (err) {
			callback(err)	
		} else {
                	if (response.statusCode === 201) {
				callback(err,body)
			} else {
				callback(err,null)
			}
		}
           });
 }

client.prototype.sectorAdd = function (payload, userToken, callback) {
          
           var options = {
                  	   method   : 'POST',
           		   uri      : this.client.host+'/v1/sectors/'+payload.bbs,
           		   json     : payload,
           	           headers  : { 
           	                        userToken:  userToken
                                      }
           }
          
           request(options,function(err,response,body){
           	if (err) {
			callback(err)	
		} else {
                	if (response.statusCode === 201) {
				callback(err,body)
			} else {
				callback(err,null)
			}
		}
           });
}

client.prototype.sectorUpdate = function (payload, userToken, callback) {
          
           var options = {
                  	   method   : 'PUT',
           		   uri      : this.client.host+'/v1/sectors/'+payload.bbs+'/'+payload.sub,
           		   json     : payload,
           	           headers  : { 
           	                        userToken:  userToken
                                      }
           }
          
           request(options,function(err,response,body){
           	if (err) {
			callback(err)	
		} else {
                	if (response.statusCode === 201) {
				callback(err,body)
			} else {
				callback(err,null)
			}
		}
           });
}

client.prototype.userGetFlag = function (userId, flagId, callback) {
           
           var options = {
                  	   method   : 'GET',
           		   uri      : this.client.host+'/v1/users/'+userid+'/flags/'+flagId,
           	           headers  : { jwt : this.client.jwt }
           }
          
           request(options,function(err,response,body){
           	if (err) {
			callback(err)	
		} else {
		      callback(err,response.statusCode)
		    	
		}
           });
}

client.prototype.userGetAllFlags = function (userId, callback) {
           
           var options = {
                  	   method   : 'GET',
           		   uri      : this.client.host+'/v1/users/'+userid+'/flags/',
           	           headers  : { jwt : this.client.jwt }
           }
          
           request(options,function(err,response,body){
           	if (err) {
			callback(err)	
		} else {
		      callback(err,response.statusCode)
		    	
		}
           });
}



module.exports = client;
